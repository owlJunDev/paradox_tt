// <auto-generated />
using System;
using Backend.Coontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240415013541_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Note", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("dateCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date-create");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("note");
                });

            modelBuilder.Entity("Backend.Models.Tag", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("nameTag")
                        .HasColumnType("text")
                        .HasColumnName("name_tag");

                    b.HasKey("id");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("NoteTag", b =>
                {
                    b.Property<Guid>("notesid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("tagsid")
                        .HasColumnType("uuid");

                    b.HasKey("notesid", "tagsid");

                    b.HasIndex("tagsid");

                    b.ToTable("NoteTag");
                });

            modelBuilder.Entity("NoteTag", b =>
                {
                    b.HasOne("Backend.Models.Note", null)
                        .WithMany()
                        .HasForeignKey("notesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("tagsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
